# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/container-build.gitlab-ci.yml

# A base job to build and publish a tag/branch to Gitlab Docker Registry using Kaniko and Gitlab Docker executor.
# Kaniko can build Docker images without using Docker-In-Docker and it's permission
# drawbacks. This job is a hidden job that needs to be extended. See the `Kaniko.gitlab-ci.yaml` template for a ready to use version.
.kaniko-build:
  variables:
    # The Dockerfile to build
    KANIKO_BUILD_DOCKERFILE: ${CI_PROJECT_DIR}/Dockerfile
    # Additional options for Kaniko executor.
    # For more details see https://github.com/GoogleContainerTools/kaniko/blob/master/README.md#additional-flags
    KANIKO_ARGS: ""
    # The image name to use in the container registry
    KANIKO_BUILD_IMAGE_NAME: ""
  image:
    # For latest releases see https://github.com/GoogleContainerTools/kaniko/releases
    # Only debug/*-debug versions of the Kaniko image are known to work within Gitlab CI
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # Compose docker tag name
    # Git Branch/Tag to Docker Image Tag Mapping
    #   * Default Branch: main -> latest
    #   * Branch: feature/my-feature -> branch-feature-my-feature
    #   * Tag: v1.0.0/beta2 -> v1.0.0-beta2
    - |
      if [ ! -z "$KANIKO_BUILD_IMAGE_TAG" ]; then
        echo "Image tag is already set"
      elif [ "$CI_COMMIT_REF_NAME" = $CI_DEFAULT_BRANCH ]; then
        KANIKO_BUILD_IMAGE_TAG="latest"
      elif [ -n "$CI_COMMIT_TAG" ];then
        NOSLASH=$(echo "$CI_COMMIT_TAG" | tr -s / - )
        SANITIZED="${NOSLASH//[^a-zA-Z0-9\-\.]/}"
        KANIKO_BUILD_IMAGE_TAG="$SANITIZED"
      else
        NOSLASH=$(echo "$CI_COMMIT_REF_NAME" | tr -s / - )
        SANITIZED="${NOSLASH//[^a-zA-Z0-9\-]/}"
        KANIKO_BUILD_IMAGE_TAG="branch-$SANITIZED"
      fi
      echo "Building image ${CI_REGISTRY_IMAGE}/${KANIKO_BUILD_IMAGE_NAME}:$KANIKO_BUILD_IMAGE_TAG"
    - mkdir -p /kaniko/.docker
    # Write credentials to access Gitlab Container Registry within the runner/ci
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    # Build and push the container. To disable push add --no-push
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${KANIKO_BUILD_DOCKERFILE} --destination "${CI_REGISTRY_IMAGE}/${KANIKO_BUILD_IMAGE_NAME}:${KANIKO_BUILD_IMAGE_TAG}" $KANIKO_ARGS
  cache: []
