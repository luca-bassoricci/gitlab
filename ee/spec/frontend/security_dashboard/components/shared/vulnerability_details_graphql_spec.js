import { GlSprintf } from '@gitlab/ui';
import { shallowMount } from '@vue/test-utils';
import { extendedWrapper } from 'helpers/vue_test_utils_helper';
import VulnerabilityDetailsGraphql from 'ee/security_dashboard/components/shared/vulnerability_details_graphql.vue';
import SeverityBadge from 'ee/vue_shared/security_reports/components/severity_badge.vue';

const TEST_VULNERABILITY = {
  description: `Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.`,
  severity: 'HIGH',
};

describe('ee/security_dashboard/components/shared/vulnerability_details_graphql.vue', () => {
  let wrapper;

  const createComponent = () => {
    wrapper = extendedWrapper(
      shallowMount(VulnerabilityDetailsGraphql, {
        propsData: {
          ...TEST_VULNERABILITY,
        },
        stubs: {
          GlSprintf,
        },
      }),
    );
  };

  afterEach(() => {
    wrapper.destroy();
  });

  beforeEach(createComponent);

  it('renders the description', () => {
    expect(wrapper.findByTestId('description').text()).toBe(TEST_VULNERABILITY.description);
  });

  it('renders the severity', () => {
    const severity = wrapper.findByTestId('severity');

    expect(severity.text()).toContain('Severity');
    expect(severity.findComponent(SeverityBadge).exists()).toBe(true);
  });
});
